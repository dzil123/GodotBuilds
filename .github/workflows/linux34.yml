name: üêß Linux Builds 3.4
on:
  push:
  pull_request:
  schedule:
    - cron: '0 23 1 * *'


# Global Settings
env:
  GODOT_BASE_BRANCH: 3.4
  SCONSFLAGS: debug_symbols=yes

jobs:
  build-linux:
    runs-on: "ubuntu-20.04"
    name: ${{ matrix.name }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Editor Mono Sanitizers
            cache-name: linux34-editor-mono-sanitizers
            target: debug
            tools: true
            tests: false
            sconsflags: module_mono_enabled=yes mono_glue=no use_ubsan=yes use_asan=yes
            build-mono: true
            bin: "./bin/godot.x11.tools.64s.mono"
            artifact: true

          - name: Editor Sanitizers
            cache-name: linux34-editor-sanitizers
            target: debug
            tools: true
            tests: false
            sconsflags: use_ubsan=yes use_asan=yes
            bin: "./bin/godot.x11.tools.64s"
            artifact: true
            
          - name: Template Release Sanitizers
            cache-name: linux34-template-sanitizers
            target: release
            tools: false
            tests: false
            sconsflags: use_ubsan=yes use_asan=yes
            bin: "./bin/godot.x11.opt.64s"
            artifact: true
            
          - name: Editor Mono Normal
            cache-name: linux34-editor-mono-normal
            target: debug
            tools: true
            tests: false
            sconsflags: module_mono_enabled=yes mono_glue=no
            build-mono: true
            bin: "./bin/godot.x11.tools.64.mono"
            artifact: true

          - name: Editor Normal
            cache-name: linux34-editor-normal
            target: debug
            tools: true
            tests: false
            bin: "./bin/godot.x11.tools.64"
            artifact: true
            
          - name: Template Release Normal
            cache-name: linux34-template-normal
            target: release
            tools: false
            tests: false
            bin: "./bin/godot.x11.opt.64"
            artifact: true

    steps:
      - uses: actions/checkout@v2
      
      - uses: actions/checkout@v2
        with:
          repository: godotengine/godot
          ref: ${{ env.GODOT_BASE_BRANCH }}
          path: godot

      - name: Linux dependencies
        shell: bash
        run: |
          # Azure repositories are not reliable, we need to prevent azure giving us packages.
          sudo rm -f /etc/apt/sources.list.d/*
          sudo cp -f misc/ci/sources.list /etc/apt/sources.list
          sudo apt-get update
          # The actual dependencies
          sudo apt-get install build-essential pkg-config libx11-dev libxcursor-dev \
              libxinerama-dev libgl1-mesa-dev libglu-dev libasound2-dev libpulse-dev \
              libdbus-1-dev libudev-dev libxi-dev libxrandr-dev yasm xvfb wget unzip

      - name: Setup Godot build cache
        uses: ./.github/actions/godot-cache
        with:
          cache-name: ${{ matrix.cache-name }}
        continue-on-error: true

      - name: Setup python and scons
        uses: ./.github/actions/godot-deps

      - name: Compilation
        run: |
          ls
          cd godot
          scons ${{ env.SCONSFLAGS }} ${{ matrix.sconsflags }} -j2
          cd ..

      # Generate mono glue
      - name: Mono Glue Generator
        if: ${{ matrix.build-mono }}
        run: |
          cd godot
          DRI_PRIME=0 xvfb-run ${{ matrix.bin }} --headless --generate-mono-glue modules/mono/glue || true
          cd ..

      # Rebuild with mono
      - name: Compilation (mono_glue=yes)
        if: ${{ matrix.build-mono }}
        run: |
          cd godot
          scons ${{ env.SCONSFLAGS }} ${{ matrix.sconsflags }} mono_glue=yes -j2
          ls bin/
          cd ..

      - name: Upload artifact
        uses: ./.github/actions/upload-artifact
        if: ${{ matrix.artifact }}
        with:
          name: ${{ matrix.cache-name }}

