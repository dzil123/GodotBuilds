name: ü™üÔ∏è Windows Builds 4
on:
  workflow_dispatch:
    inputs:
      branch:
        description: "branch"
        required: true
        type: string
      matrix_name:
        description: "only run this matrix"
        required: true
        type: string
        default: "windows4-editor-sanitizers"


env:
  SCONSFLAGS: dev_build=yes
  SCONS_CACHE: "${{github.workspace}}/.scons-cache/"
  SCONS_CACHE_LIMIT: 4096

jobs:
  build-godot4:
    runs-on: "windows-latest"
    name: ${{ matrix.name }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Editor Normal
            cache-name: windows4-editor-normal
            target: editor
            sconsflags: p=windows
            artifact: true

          - name: Editor Sanitizers
            cache-name: windows4-editor-sanitizers
            target: editor
            sconsflags: p=windows
            artifact: true

    steps:
      - name: fail if not the selected matrix
        shell: bash
        if: ${{ matrix.cache-name != inputs.matrix_name }}
        run: |
          exit 1

      - uses: actions/checkout@v3
      
      - uses: actions/checkout@v3
        with:
          repository: dzil123/godot
          ref: ${{ inputs.branch }}
          path: godot

      - name: Configuring Python packages
        run: |
          python -c "import sys; print(sys.version)"
          python -m pip install scons pywin32
          python --version
          scons --version

      - name: Setup python and scons
        uses: ./.github/actions/godot-deps

      - name: Compilation
        run: |
          ls
          cd godot
          scons ${{ env.SCONSFLAGS }} ${{ matrix.sconsflags }} target=${{ matrix.target }} -j2
          cd ..
          
      - name: Compilation
        env:
          SCONS_CACHE: /.scons_cache/
        run: |
          scons -j2 verbose=yes warnings=all werror=yes tests=no target=${{matrix.target}} dev_build=no
      # Make build available
      - uses: actions/upload-artifact@v2
        with:
          name: ${{matrix.executable_name}}
          path: bin/
